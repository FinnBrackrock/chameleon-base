{#
    vars:
        - hasError
        - errorMessage
        - moduleSpotName
        - uploaderFormAction
        - uploadUrl
        - hiddenFields
            - name
            - value
        - singleMode
        - showMetaFields
        - uploadDescription
        - uploadName
        - allowedFileTypes
        - uploadSuccessCallback
#}
{% trans_default_domain constant('ChameleonSystem\\CoreBundle\\i18n\\TranslationConstants::DOMAIN_BACKEND') %}
<div class="container">
{% if hasError %}
    <div class="alert alert-danger">{{ errorMessage }}</div>
{% else %}
    <form id="fileupload{{ moduleSpotName }}" action="{{ uploaderFormAction | escape('html_attr') }}" method="POST" enctype="multipart/form-data" class="uploader-component">

        {% for hiddenField in hiddenFields %}
            <input type="hidden" name="{{ hiddenField.name | escape('html_attr') }}" value="{{ hiddenField.value | escape('html_attr') }}">
        {% endfor %}

        <noscript>
            <div class="alert alert-danger" role="alert">
                {% trans %}chameleon_system_core.cms_module_universal_uploader.error_no_browser_support{% endtrans %}
            </div>
        </noscript>

        <div class="headline">
            <div class="h4">
                <span class="glyphicon glyphicon-upload"></span> {% trans %}chameleon_system_core.cms_module_universal_uploader.headline_choose_files{% endtrans %}
            </div>
            {% trans %}chameleon_system_core.cms_module_universal_uploader.helptext{% endtrans %}
        </div>

        <div class="progress-process">
            <span class="fileupload-process"></span>

            <div class="fileupload-progress fade">
                <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
                    <div class="progress-bar progress-bar-success" style="width:0%;"></div>
                </div>
                <div class="progress-extended">&nbsp;</div>
            </div>
        </div>

        {% if maxUploadWidth and maxUploadHeight and proportionExactMatch%}
            {% trans with {'%maxWidth%':maxUploadWidth, '%maxHeight%':maxUploadHeight} %}chameleon_system_core.cms_module_universal_uploader.msg_require_exact_measurements{% endtrans %}
        {% else %}
            {% if maxUploadWidth or maxUploadHeight %}
                {% set maxUploadWidthText = maxUploadWidth %}
                {% if not maxUploadWidthText %}
                    {% set maxUploadWidthText = 'chameleon_system_core.cms_module_universal_uploader.dimension_unrestricted' | trans %}
                {% endif %}
                {% set maxUploadHeightText = maxUploadHeight %}
                {% if not maxUploadHeightText %}
                    {% set maxUploadHeightText = 'chameleon_system_core.cms_module_universal_uploader.dimension_unrestricted' | trans %}
                {% endif %}
                {{ maxUploadHeightText }}
                {% trans with {'%maxWidth%':maxUploadWidthText, '%maxHeight%':maxUploadHeightText} %}chameleon_system_core.cms_module_universal_uploader.msg_require_max_measurements{% endtrans %}
            {% endif %}
        {% endif %}

        <div class="queue">
            <div class="queue-header">
                <div class="row">
                    <div class="col-xs-7 filename">
                        {% trans %}chameleon_system_core.cms_module_universal_uploader.filename{% endtrans %}
                    </div>
                    <div class="col-xs-2 size">
                        {% trans %}chameleon_system_core.cms_module_universal_uploader.size{% endtrans %}
                    </div>
                    <div class="col-xs-3 state">
                        {% trans %}chameleon_system_core.cms_module_universal_uploader.state{% endtrans %}
                    </div>
                </div>
            </div>
            <div class="file-container dropzone">
                <div class="drag-drop-notice">
                    {% trans %}chameleon_system_core.cms_module_universal_uploader.file_drag_target{% endtrans %}
                </div>
            </div>
        </div>

        <div class="fileupload-buttonbar">

            <div class="btn btn-primary fileinput-button">
                <span class="glyphicon glyphicon-plus"></span> {% trans %}chameleon_system_core.cms_module_universal_uploader.choose_files_button_text{% endtrans %}
                <input type="file" name="files[]"{% if not singleMode %} multiple{% endif %}>
            </div>
            <button class="btn btn-primary start" disabled><span class="glyphicon glyphicon-upload"></span> {% trans %}chameleon_system_core.cms_module_universal_uploader.upload_files_button_text{% endtrans %}</button>

        </div>

        {% if showMetaFields %}
        <div class="meta-fields">
            <div class="row">
                <div class="col-xs-6">
                    <div>{% trans %}chameleon_system_core.cms_module_universal_uploader.meta_title{% endtrans %}</div>
                    <textarea cols="30" id="uploadname" name="uploadname" style="height: 50px;" class="form-control">{{ uploadName }}</textarea>
                </div>
                <div class="col-xs-6">
                    <div>{% trans %}chameleon_system_core.cms_module_universal_uploader.meta_description{% endtrans %}</div>
                    <textarea cols="30" id="uploaddescription" name="uploaddescription" style="height: 50px;" class="form-control">{{ uploadDescription }}</textarea>
                </div>
            </div>
        </div>
        {% endif %}

    </form>

    <script>
        $(function () {
            'use strict';

            $('#fileupload{{ moduleSpotName }}').chameleonJqueryFileUploader({
            {% if singleMode %}singleMode: true,{% endif %}
            {% if allowedFileTypes %}allowedFileTypes: ["{{ allowedFileTypes | join('","') | raw }}"],{% endif %}
            {% if uploadSuccessCallback %}fileUploadSuccessCallback: {{ uploadSuccessCallback }},{% endif %}
            {% if queueCompleteCallback %}queueCompleteCallback: {{ queueCompleteCallback }},{% endif %}
                chunkSize: {{ chunkSize * 1000 }},
                maxUploadSize: {{ maxUploadSize * 1000 }},
                uploadUrl: '{{ uploadUrl | escape('js') }}'
            });

        });
    </script>
{% endif %}
</div>